name: Helm Release

on:
  push:
    tags:
      - "v*"

permissions: read-all

jobs:
  release-chart:
    runs-on: ubuntu-20.04
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    steps:
      - uses: actions/checkout@v2
      - uses: anchore/sbom-action/download-syft@v0.14.2
      - name: "Extract Version"
        id: extract_version
        run: |
          GIT_TAG=${GITHUB_REF##*/}
          VERSION=${GIT_TAG##v}
          echo "::set-output name=version::$(echo $VERSION)"
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.2.0'
      - name: Signing Keys
        run: |
          echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
      - name: Publish Helm chart
        id: helm_publish
        uses: oliverbaehler/helm-oci-chart-releaser@main
        with:
          registry: ghcr.io
          repository: oliverbaehler/charts
          name: "cloudflare-tunnel-ingress-controller"
          path: "./helm/cloudflare-tunnel-ingress-controller/"
          app_version: ${{ steps.extract_version.outputs.version }}
          tag: ${{ steps.extract_version.outputs.version }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          update_dependencies: 'true' # Defaults to false

      - name: CoSign | Login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: CoSign | Public Key
        run: echo '${{ secrets.COSIGN_PUBLIC_KEY }}' > cosign.pub

      - name: CoSign | Attestation
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign verify --key cosign.pub ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}
          syft ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }} -o spdx-json > sbom-spdx.json
          cosign attest --predicate sbom-spdx.json --type spdx --key cosign.key ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}
          cosign verify-attestation -o verified-sbom-spdx.json --key cosign.pub ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}

      - name: CoSign | Sign
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign sign --yes --key cosign.key ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}

      - name: CoSign | Attestation
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign verify --key cosign.pub ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}
          syft ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }} -o spdx-json > sbom-spdx.json
          cosign attest --predicate sbom-spdx.json --type spdx --key cosign.key ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}
          cosign verify-attestation -o verified-sbom-spdx.json --key cosign.pub ${{ steps.helm_publish.outputs.image }}@${{ steps.helm_publish.outputs.digest }}

      - name: Cleanup
        if: ${{ always() }}
        run: |
          docker logout ghcr.io
          rm -f cosign.key

